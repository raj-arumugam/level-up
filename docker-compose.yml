version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: portfolio-tracker-db
    environment:
      POSTGRES_DB: portfolio_tracker
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: portfolio_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portfolio_user -d portfolio_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    container_name: portfolio-tracker-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://portfolio_user:portfolio_password@postgres:5432/portfolio_tracker
      JWT_SECRET: your-jwt-secret-key
      ALPHA_VANTAGE_API_KEY: your-alpha-vantage-api-key
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASSWORD: your-email-password
    ports:
      - "3001:3001"
    # Removed volumes to avoid binary compatibility issues
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev:backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: portfolio-tracker-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    # No volumes needed for production build
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm start

volumes:
  postgres_data: